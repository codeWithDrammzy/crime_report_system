# Generated by Django 5.2.7 on 2025-10-25 16:33

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(max_length=150)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Super Admin'), ('officer', 'Officer'), ('citizen', 'Citizen')], default='citizen', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CrimeReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.CharField(editable=False, max_length=12, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('incident_type', models.CharField(choices=[('CR-TEMP', 'CR-TEMP'), ('ASSAULT', 'Assault'), ('BURGLARY', 'Burglary'), ('THEFT', 'Theft'), ('ROBBERY', 'Robbery'), ('VANDALISM', 'Vandalism'), ('FRAUD', 'Fraud'), ('CYBERCRIME', 'Cyber Crime'), ('DRUG_OFFENSE', 'Drug Offense'), ('TRAFFIC_ACCIDENT', 'Traffic Accident'), ('DOMESTIC_VIOLENCE', 'Domestic Violence'), ('HARASSMENT', 'Harassment'), ('OTHER', 'Other')], max_length=50)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High'), ('Emergency', 'Emergency')], default='Medium', max_length=20)),
                ('evidence_image', models.ImageField(blank=True, null=True, upload_to='evidence/images/%Y/%m/%d/')),
                ('evidence_video', models.FileField(blank=True, null=True, upload_to='evidence/videos/%Y/%m/%d/')),
                ('evidence_audio', models.FileField(blank=True, null=True, upload_to='evidence/audio/%Y/%m/%d/')),
                ('date_reported', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Investigating', 'Investigating'), ('Resolved', 'Resolved'), ('Dismissed', 'Dismissed')], default='Pending', max_length=20)),
                ('reporter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reports', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='crime_app.department')),
            ],
            options={
                'verbose_name': 'Crime Report',
                'verbose_name_plural': 'Crime Reports',
                'ordering': ['-date_reported'],
            },
        ),
        migrations.CreateModel(
            name='CitizenNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('status_update', 'Status Update'), ('reminder', 'Reminder'), ('general', 'General')], default='general', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('related_report', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crime_app.crimereport')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(choices=[('ASP', 'Assistant Superintendent of Police'), ('DSP', 'Deputy Superintendent of Police'), ('SP', 'Superintendent of Police'), ('CSP', 'Chief Superintendent of Police'), ('ACP', 'Assistant Commissioner of Police'), ('DCP', 'Deputy Commissioner of Police'), ('CP', 'Commissioner of Police')], max_length=50)),
                ('badge_number', models.CharField(max_length=30, unique=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='officers/')),
                ('on_duty', models.BooleanField(default=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='officers', to='crime_app.department')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='crime_app.officer')),
            ],
        ),
        migrations.CreateModel(
            name='ReportReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_acknowledged', models.BooleanField(default=False)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='crime_app.crimereport')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='crimereport',
            index=models.Index(fields=['status', 'date_reported'], name='crime_app_c_status_ccdd57_idx'),
        ),
        migrations.AddIndex(
            model_name='crimereport',
            index=models.Index(fields=['reporter', 'date_reported'], name='crime_app_c_reporte_0b4b8a_idx'),
        ),
        migrations.AddIndex(
            model_name='crimereport',
            index=models.Index(fields=['department', 'date_reported'], name='crime_app_c_departm_16a46f_idx'),
        ),
    ]
